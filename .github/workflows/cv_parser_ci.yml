name: CV Parser CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  CV_PARSER_CHECKS_STANDARD:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install flake8 and black
        run: |
          pip install flake8 black

      - name: Run flake8
        continue-on-error: true
        run: |
          flake8 CV_PARSER_MODEL/ > flake8_report.txt || true

      - name: Run black check
        continue-on-error: true
        run: |
          black --check CV_PARSER_MODEL/ > black_report.txt || true

      - name: Upload lint reports
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: |
            flake8_report.txt
            black_report.txt

  APP_FRONTEND_CHECKS:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: App-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run Angular lint
        continue-on-error: true
        run: npm run lint || true

      - name: Run Angular tests
        continue-on-error: true
        run: npm run test -- --watch=false --browsers=ChromeHeadless || true

  BACKEND_CHECKS:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test Spring Boot
        continue-on-error: true
        run: mvn verify || true

  run-parser:
    runs-on: ubuntu-latest
    needs: [CV_PARSER_CHECKS_STANDARD, APP_FRONTEND_CHECKS, BACKEND_CHECKS]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r CV_PARSER_MODEL/requirements.txt

      - name: Download NLTK data
        run: |
          python -m nltk.downloader stopwords

      - name: Run CV Parser
        run: |
          python CV_PARSER_MODEL/main.py parse_cv --path .github/test-data/test_cv.pdf --save --console

      - name: Upload result.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: result-json
          path: CV_PARSER_MODEL/results/parsed_resume_*.json

  send-emails:
    needs: [run-parser]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        recipient:
          - sami.boukesra@esprit.tn
          - imed.chakhari@esprit.tn
          - bouslimi.azaiez@esprit.tn
          - nadine.maazoun@esprit.tn
          - nader.benhammouda@esprit.tn
          - yaaser.jemli@esprit.tn
    steps:
      - name: Download result artifact
        uses: actions/download-artifact@v4
        with:
          name: result-json

      - name: Download lint reports
        uses: actions/download-artifact@v4
        with:
          name: lint-reports

      - name: Show lint results
        id: show-lint-results
        run: |
          echo "flake8<<EOF" >> $GITHUB_OUTPUT
          cat flake8_report.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "black<<EOF" >> $GITHUB_OUTPUT
          cat black_report.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send result email to ${{ matrix.recipient }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "CV Parser CI Result"
          to: ${{ matrix.recipient }}
          from: ${{ secrets.EMAIL_USER }}
          body: |
            Hello,

            The CV parser has finished running.

            **Date:** ${{ github.run_started_at }}
            **Test file:** .github/test-data/test_cv.pdf
            **Workflow run:** ${{ github.run_id }}
            **Commit:** ${{ github.sha }}

            Please find the result.json attached.

            **Python Linting Results:**

            Flake8:
            ${{ steps.show-lint-results.outputs.flake8 }}

            Black:
            ${{ steps.show-lint-results.outputs.black }}

            Regards,
            GitHub Actions - CV_PARSER_MODEL
            For any questions, please contact YASSER JEMLI

            Sorry for the inconvenience, but the CV parser is still in development and may not work as expected.

            the emails will be desactivated soon after few testing .. thanks for your understanding.
          attachments: result-json/*.json